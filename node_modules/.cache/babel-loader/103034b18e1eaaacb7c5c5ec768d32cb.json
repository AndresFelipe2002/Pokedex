{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\afper\\\\Desktop\\\\Pokedex\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport \"./styles.css\";\nimport Navbar from '../src/components/Navbar';\nimport Searchbar from './components/Searchbar';\nimport Pokedex from './components/Pokedex';\nimport { getPokemonData, getPokemons } from './components/api';\nimport Pokemon from './components/Pokemon';\nimport { FavoriteProvider } from './components/contexts/favoritesContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  useState,\n  useEffect\n} = React;\nexport default function App() {\n  _s();\n\n  const [pokemons, setPokemons] = useState([]);\n  const [page, setPage] = useState(1);\n  const [total, setTotal] = useState(0);\n  const [loading, setLoading] = useState(true);\n  const [favorites, setFavorites] = useState([\"raichu\"]);\n\n  const fetchPokemons = async () => {\n    try {\n      setLoading(true);\n      const data = await getPokemons(25, 25 * page);\n      const promises = data.results.map(async pokemon => {\n        return await getPokemonData(pokemon.url);\n      });\n      const results = await Promise.all(promises);\n      setPokemons(results);\n      setLoading(false);\n      setTotal(Math.ceil(data.count / 25));\n    } catch (err) {}\n  };\n\n  useEffect(() => {\n    fetchPokemons();\n  }, [page]);\n\n  const updateFavoritePokemons = name => {\n    const updated = [...favorites];\n    const isFavorite = updated.indexOf(name);\n\n    if (isFavorite >= 0) {\n      updated.splice(isFavorite, 1);\n    } else {\n      updated.push(name);\n    }\n\n    setFavorites(updated);\n  };\n\n  return /*#__PURE__*/_jsxDEV(FavoriteProvider, {\n    value: {\n      favoritePokemons: favorites,\n      updateFavoritePokemons: updateFavoritePokemons\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"App\",\n        children: [/*#__PURE__*/_jsxDEV(Searchbar, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 8\n        }, this), /*#__PURE__*/_jsxDEV(Pokedex, {\n          loading: loading,\n          pokemons: pokemons,\n          page: page,\n          setPage: setPage,\n          total: total\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 8\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"2Ydp7yxCX5zj2pu709OROK8mJdk=\");\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/afper/Desktop/Pokedex/src/App.js"],"names":["React","Navbar","Searchbar","Pokedex","getPokemonData","getPokemons","Pokemon","FavoriteProvider","useState","useEffect","App","pokemons","setPokemons","page","setPage","total","setTotal","loading","setLoading","favorites","setFavorites","fetchPokemons","data","promises","results","map","pokemon","url","Promise","all","Math","ceil","count","err","updateFavoritePokemons","name","updated","isFavorite","indexOf","splice","push","favoritePokemons"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport \"./styles.css\";\r\nimport Navbar from '../src/components/Navbar';\r\nimport Searchbar from './components/Searchbar';\r\nimport Pokedex from './components/Pokedex';\r\nimport { getPokemonData, getPokemons } from './components/api';\r\nimport Pokemon from './components/Pokemon';\r\nimport { FavoriteProvider } from './components/contexts/favoritesContext';\r\n\r\nconst {useState, useEffect} = React;\r\n\r\nexport default function App() {\r\n  const [pokemons, setPokemons] = useState([]);\r\n  const [page, setPage] = useState(1);\r\n  const [total, setTotal] = useState(0);\r\n  const [loading, setLoading] = useState(true);\r\n  const [favorites, setFavorites] = useState([\"raichu\"]);\r\n\r\n  const fetchPokemons = async () => {\r\ntry {\r\nsetLoading(true);\r\nconst data = await getPokemons(25, 25 * page); \r\nconst promises = data.results.map(async(pokemon) => {\r\nreturn await getPokemonData(pokemon.url)\r\n})\r\nconst results = await Promise.all(promises)\r\nsetPokemons(results)\r\nsetLoading(false);\r\nsetTotal(Math.ceil(data.count / 25))\r\n} catch(err){}\r\n\r\n};\r\n\r\nuseEffect(() => {\r\nfetchPokemons();\r\n}, [page]);\r\n\r\n\r\n const updateFavoritePokemons = (name) => {\r\n   const updated = [...favorites];\r\n   const isFavorite = updated.indexOf(name);\r\n   if(isFavorite >= 0) {\r\n     updated.splice(isFavorite, 1);\r\n   } else {\r\n     updated.push(name);\r\n   }\r\n   setFavorites(updated);\r\n \r\n};\r\n\r\n\r\n  return (\r\n    <FavoriteProvider value={{\r\n      favoritePokemons: favorites,\r\n      updateFavoritePokemons: updateFavoritePokemons\r\n      }} >\r\n\r\n    <div>\r\n      <Navbar />\r\n    <div className=\"App\">\r\n       <Searchbar />\r\n       <Pokedex \r\n       loading={loading}\r\n       pokemons={pokemons} \r\n       page={page} \r\n       setPage={setPage}\r\n       total={total}\r\n       />\r\n    </div> \r\n    </div>\r\n    </FavoriteProvider>\r\n  );\r\n}\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}